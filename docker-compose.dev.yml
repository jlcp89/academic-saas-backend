version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: academic-saas-db-dev
    environment:
      POSTGRES_DB: academic_saas_dev
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d academic_saas_dev"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: academic-saas-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Django Web Application
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: academic-saas-web-dev
    environment:
      - ENVIRONMENT=dev
      - DEBUG=True
      - DATABASE_URL=postgresql://admin:admin123@db:5432/academic_saas_dev
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - media_files_dev:/app/media
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 2 --reload core.wsgi:application"

  # Celery Worker for background tasks
  celery:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: academic-saas-celery-dev
    environment:
      - ENVIRONMENT=dev
      - DATABASE_URL=postgresql://admin:admin123@db:5432/academic_saas_dev
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
    depends_on:
      - db
      - redis
    command: celery -A core worker --loglevel=info

  # Celery Beat for scheduled tasks
  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: academic-saas-beat-dev
    environment:
      - ENVIRONMENT=dev
      - DATABASE_URL=postgresql://admin:admin123@db:5432/academic_saas_dev
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
    depends_on:
      - db
      - redis
    command: celery -A core beat --loglevel=info

volumes:
  postgres_data_dev:
  redis_data_dev:
  media_files_dev: