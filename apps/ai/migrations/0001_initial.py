# Generated by Django 4.2.9 on 2025-07-21 06:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("academic", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("organizations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PredictiveAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("ACADEMIC_RISK", "Academic Risk"),
                            ("ENGAGEMENT_DROP", "Engagement Drop"),
                            ("PERFORMANCE_TREND", "Performance Trend"),
                            ("ASSIGNMENT_OVERDUE", "Assignment Overdue"),
                            ("LEARNING_GAP", "Learning Gap"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="MEDIUM",
                        max_length=10,
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(decimal_places=2, max_digits=3),
                ),
                ("predicted_outcome", models.TextField()),
                ("recommended_actions", models.JSONField(default=list)),
                ("supporting_evidence", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.school",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predictive_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academic.subject",
                    ),
                ),
            ],
            options={
                "ordering": ["-priority", "-confidence_score", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LearningRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("STUDY_RESOURCE", "Study Resource"),
                            ("PRACTICE_EXERCISE", "Practice Exercise"),
                            ("PEER_COLLABORATION", "Peer Collaboration"),
                            ("TEACHER_CONSULTATION", "Teacher Consultation"),
                            ("LEARNING_STRATEGY", "Learning Strategy"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "expected_impact",
                    models.DecimalField(decimal_places=2, max_digits=3),
                ),
                ("time_requirement", models.CharField(max_length=50)),
                ("difficulty_level", models.CharField(max_length=20)),
                ("resources", models.JSONField(default=list)),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("student_feedback", models.TextField(blank=True, null=True)),
                ("effectiveness_rating", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "related_assignments",
                    models.ManyToManyField(blank=True, to="academic.assignment"),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.school",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academic.subject",
                    ),
                ),
            ],
            options={
                "ordering": ["-expected_impact", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AssignmentIntelligence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "difficulty_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                (
                    "completion_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "average_grade",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("common_mistakes", models.JSONField(default=list)),
                ("time_distribution", models.JSONField(default=dict)),
                ("success_factors", models.JSONField(default=list)),
                ("optimization_suggestions", models.JSONField(default=list)),
                (
                    "difficulty_adjustment",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assignment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="intelligence",
                        to="academic.assignment",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.school",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AITrainingSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_name", models.CharField(max_length=255)),
                ("model_type", models.CharField(max_length=100)),
                ("training_data_size", models.IntegerField()),
                (
                    "validation_accuracy",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=5, null=True
                    ),
                ),
                (
                    "test_accuracy",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=5, null=True
                    ),
                ),
                ("model_parameters", models.JSONField(default=dict)),
                ("feature_importance", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=False)),
                ("deployment_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.school",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StudentLearningProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "learning_style",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "pace_preference",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "difficulty_tolerance",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                ("study_patterns", models.JSONField(default=dict)),
                ("engagement_metrics", models.JSONField(default=dict)),
                ("performance_trends", models.JSONField(default=dict)),
                ("risk_level", models.CharField(default="LOW", max_length=20)),
                (
                    "predicted_grade",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("recommended_actions", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.school",
                    ),
                ),
                (
                    "student",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("school", "student")},
            },
        ),
        migrations.CreateModel(
            name="AcademicRiskPrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("risk_score", models.DecimalField(decimal_places=2, max_digits=3)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("LOW", "Low Risk"),
                            ("MEDIUM", "Medium Risk"),
                            ("HIGH", "High Risk"),
                            ("CRITICAL", "Critical Risk"),
                        ],
                        max_length=20,
                    ),
                ),
                ("confidence", models.DecimalField(decimal_places=2, max_digits=3)),
                ("factors", models.JSONField(default=dict)),
                ("predicted_outcome", models.TextField()),
                (
                    "attendance_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "assignment_completion_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "average_grade",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("late_submissions_count", models.IntegerField(default=0)),
                (
                    "participation_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "study_time_hours",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "previous_semester_gpa",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                (
                    "current_semester_gpa",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                ("days_since_last_login", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="organizations.school",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_predictions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-risk_score", "-last_updated"],
                "unique_together": {("school", "student")},
            },
        ),
    ]
